# CGMiner-RS 软算法核心示例配置
# 本配置专门针对软算法核心进行优化
# 适用于Mac环境、开发测试和CPU挖矿

[general]
log_level = "info"
log_file = "logs/cgminer-software.log"  # 软算法核心专用日志文件
pid_file = "/tmp/cgminer-rs-software.pid"  # 进程ID文件
work_restart_timeout = 30    # 软算法核心工作重启超时较短
scan_time = 15              # 软算法核心扫描间隔较短

# =============================================================================
# 软算法核心配置 - 优化设置
# =============================================================================
[cores]
enabled_cores = ["software"]
default_core = "software"

[cores.software_core]
enabled = true
device_count = 12           # 增加设备数量以充分利用CPU
min_hashrate = 800000000.0  # 800 MH/s - 适中的最小算力
max_hashrate = 3000000000.0 # 3 GH/s - 适合现代CPU的最大算力
error_rate = 0.003          # 0.3% - 很低的错误率
batch_size = 4000           # 大批次处理提高效率
work_timeout_ms = 2000      # 2秒超时 - 快速响应

# CPU绑定配置 - 启用以提高性能
[cores.software_core.cpu_affinity]
enabled = true              # 启用CPU绑定
strategy = "round_robin"    # 轮询分配策略
# manual_mapping = { 0 = 0, 1 = 1, 2 = 2, 3 = 3 }  # 手动映射示例

# 禁用ASIC核心
[cores.asic_core]
enabled = false
chain_count = 3
spi_speed = 6000000
uart_baud = 115200
auto_detect = true
power_limit = 3000.0
cooling_mode = "auto"

# =============================================================================
# 软算法设备配置
# =============================================================================
[devices]
auto_detect = true
scan_interval = 15          # 软算法设备扫描间隔

# 软算法虚拟链配置 - 多链并行
[[devices.chains]]
id = 0
enabled = true
frequency = 800             # 适中频率
voltage = 950
auto_tune = false
chip_count = 1

[[devices.chains]]
id = 1
enabled = true
frequency = 800
voltage = 950
auto_tune = false
chip_count = 1

[[devices.chains]]
id = 2
enabled = true
frequency = 800
voltage = 950
auto_tune = false
chip_count = 1

# =============================================================================
# F2Pool 矿池配置 - 软算法核心专用
# =============================================================================
[pools]
strategy = "Failover"
failover_timeout = 20       # 软算法核心故障转移更快
retry_interval = 5          # 快速重试

[[pools.pools]]
url = "stratum+tcp://btc.f2pool.com:1314"
user = "kayuii.bbt"
password = "21235365876986800"
priority = 1
enabled = true

[[pools.pools]]
url = "stratum+tcp://btc-asia.f2pool.com:1314"
user = "kayuii.bbt"
password = "21235365876986800"
priority = 2
enabled = true

# 备用测试矿池 - 用于开发和测试
[[pools.pools]]
url = "stratum+tcp://pool.example.com:4444"
user = "test.worker"
password = "x"
priority = 3
enabled = false  # 默认禁用，需要时可启用

# 本地测试矿池 - 用于离线测试
[[pools.pools]]
url = "stratum+tcp://localhost:3333"
user = "local.test"
password = "x"
priority = 4
enabled = false  # 默认禁用，需要时可启用

# =============================================================================
# API 配置 - 开发友好
# =============================================================================
[api]
enabled = true
bind_address = "127.0.0.1"
port = 4028
allow_origins = ["*"]
# auth_token = "your-secret-token"  # 可选的API认证令牌

# =============================================================================
# 监控配置 - 软算法核心优化
# =============================================================================
[monitoring]
enabled = true
metrics_interval = 20       # 更频繁的监控
prometheus_port = 9090      # Prometheus指标端口

[monitoring.alert_thresholds]
# 软算法核心温度阈值较低 (CPU温度)
temperature_warning = 70.0
temperature_critical = 80.0
hashrate_drop_percent = 15.0
error_rate_percent = 2.0
max_temperature = 75.0
max_cpu_usage = 90.0        # 允许更高的CPU使用率
max_memory_usage = 85.0
max_device_temperature = 75.0
max_error_rate = 2.0
min_hashrate = 100.0        # 软算法核心最小算力阈值

# =============================================================================
# 性能优化配置 - 软算法核心专用
# =============================================================================
[performance]
# CPU优化设置
cpu_optimization = true
thread_priority = "high"    # 线程优先级: low, normal, high
memory_pool_size = 1024     # 内存池大小 (MB)
work_queue_size = 10000     # 工作队列大小

# 算法优化
use_sse = true             # 启用SSE指令集优化
use_avx = true             # 启用AVX指令集优化 (如果支持)
batch_processing = true    # 启用批处理优化

# =============================================================================
# 开发和调试配置
# =============================================================================
[debug]
enabled = false            # 启用调试模式
verbose_logging = false    # 详细日志记录
performance_profiling = false  # 性能分析
memory_tracking = false    # 内存使用跟踪
network_debugging = false  # 网络调试

# 测试模式配置
[test_mode]
enabled = false           # 启用测试模式
simulate_hardware = false # 模拟硬件响应
fake_hashrate = false     # 使用虚假算力 (仅用于UI测试)
offline_mode = false      # 离线模式 (不连接矿池)

# =============================================================================
# 高级配置 - 专家用户
# =============================================================================
[advanced]
# 网络配置
connection_timeout = 30    # 连接超时 (秒)
read_timeout = 10         # 读取超时 (秒)
write_timeout = 10        # 写入超时 (秒)
keepalive_interval = 60   # 保活间隔 (秒)

# 重试配置
max_retries = 3           # 最大重试次数
retry_delay = 5           # 重试延迟 (秒)
exponential_backoff = true # 指数退避

# 资源限制
max_memory_usage = 2048   # 最大内存使用 (MB)
max_cpu_cores = 0         # 最大CPU核心数 (0=自动检测)
max_threads_per_core = 2  # 每个核心最大线程数

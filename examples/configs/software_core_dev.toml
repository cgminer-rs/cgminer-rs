# CGMiner-RS 软算法核心开发配置
# 本配置专门用于开发、测试和调试
# 启用了详细的日志记录和调试功能

[general]
log_level = "debug"         # 详细的调试日志
log_file = "logs/cgminer-dev.log"
pid_file = "/tmp/cgminer-rs-dev.pid"
work_restart_timeout = 10   # 更短的超时用于快速测试
scan_time = 5              # 更频繁的扫描

# =============================================================================
# 软算法核心配置 - 开发优化
# =============================================================================
[cores]
enabled_cores = ["software"]
default_core = "software"

[cores.software_core]
enabled = true
device_count = 4            # 较少的设备数量用于测试
min_hashrate = 100000000.0  # 100 MH/s - 较低的最小算力
max_hashrate = 1000000000.0 # 1 GH/s - 适中的最大算力
error_rate = 0.01          # 1% - 较高的错误率用于测试错误处理
batch_size = 1000          # 较小的批次大小
work_timeout_ms = 5000     # 5秒超时

# CPU绑定配置 - 开发环境优化
[cores.software_core.cpu_affinity]
enabled = true
strategy = "round_robin"
# 手动映射前4个核心用于测试
# manual_mapping = { 0 = 0, 1 = 1, 2 = 2, 3 = 3 }

# 禁用ASIC核心
[cores.asic_core]
enabled = false
chain_count = 1
spi_speed = 1000000
uart_baud = 115200
auto_detect = false
power_limit = 1000.0
cooling_mode = "manual"

# =============================================================================
# 开发设备配置
# =============================================================================
[devices]
auto_detect = true
scan_interval = 5           # 更频繁的设备扫描

# 简化的链配置用于测试
[[devices.chains]]
id = 0
enabled = true
frequency = 400             # 较低频率
voltage = 800
auto_tune = false
chip_count = 1

[[devices.chains]]
id = 1
enabled = true
frequency = 400
voltage = 800
auto_tune = false
chip_count = 1

# =============================================================================
# 测试矿池配置
# =============================================================================
[pools]
strategy = "Failover"
failover_timeout = 10       # 快速故障转移
retry_interval = 3          # 快速重试

# 本地测试矿池 (优先级最高)
[[pools.pools]]
url = "stratum+tcp://localhost:3333"
user = "dev.test"
password = "x"
priority = 1
enabled = false  # 需要本地测试服务器时启用

# 测试矿池
[[pools.pools]]
url = "stratum+tcp://pool.example.com:4444"
user = "test.worker"
password = "x"
priority = 2
enabled = false

# F2Pool (备用)
[[pools.pools]]
url = "stratum+tcp://btc.f2pool.com:1314"
user = "kayuii.bbt"
password = "21235365876986800"
priority = 3
enabled = true

# =============================================================================
# 开发API配置
# =============================================================================
[api]
enabled = true
bind_address = "127.0.0.1"
port = 4029                 # 不同的端口避免冲突
allow_origins = ["*"]
# auth_token = "dev-token-123"  # 开发用认证令牌

# =============================================================================
# 开发监控配置
# =============================================================================
[monitoring]
enabled = true
metrics_interval = 10       # 更频繁的监控用于开发
prometheus_port = 9091      # 不同的端口避免冲突

[monitoring.alert_thresholds]
# 开发环境的宽松阈值
temperature_warning = 80.0
temperature_critical = 90.0
hashrate_drop_percent = 30.0  # 更宽松的算力下降阈值
error_rate_percent = 5.0      # 更高的错误率阈值
max_temperature = 85.0
max_cpu_usage = 95.0
max_memory_usage = 90.0
max_device_temperature = 85.0
max_error_rate = 5.0
min_hashrate = 10.0           # 很低的最小算力阈值

# =============================================================================
# 性能优化配置 - 开发环境
# =============================================================================
[performance]
cpu_optimization = true
thread_priority = "normal"   # 正常优先级避免影响开发环境
memory_pool_size = 512      # 较小的内存池
work_queue_size = 5000      # 较小的工作队列

use_sse = true
use_avx = false             # 禁用AVX以提高兼容性
batch_processing = true

# =============================================================================
# 开发和调试配置 - 全部启用
# =============================================================================
[debug]
enabled = true              # 启用调试模式
verbose_logging = true      # 详细日志记录
performance_profiling = true  # 性能分析
memory_tracking = true      # 内存使用跟踪
network_debugging = true    # 网络调试

# 测试模式配置
[test_mode]
enabled = true              # 启用测试模式
simulate_hardware = false   # 使用真实算法
fake_hashrate = false       # 使用真实算力
offline_mode = false        # 在线模式

# =============================================================================
# 开发高级配置
# =============================================================================
[advanced]
# 较短的超时用于快速测试
connection_timeout = 15
read_timeout = 5
write_timeout = 5
keepalive_interval = 30

# 快速重试
max_retries = 5
retry_delay = 2
exponential_backoff = true

# 开发资源限制
max_memory_usage = 1024     # 1GB内存限制
max_cpu_cores = 4           # 限制CPU核心数
max_threads_per_core = 1    # 每核心1线程用于调试
